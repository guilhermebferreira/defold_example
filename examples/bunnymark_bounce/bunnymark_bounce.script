local WIDTH = tonumber(sys.get_config("display.width"))
local HEIGHT = tonumber(sys.get_config("display.height"))

local VELOCITY = 200

local TOUCH = hash("touch")

-- store the set_position function in a local variable to remove the need for index lookups on go in the update function
set_position = go.set_position

--- prefer local bunnies instead of self.bunnies
local bunnies = {}

local function create_bunny(self, position)
	local id = factory.create("#factory", position)
	local angle = math.random(1,360)
	local velocity = vmath.vector3(VELOCITY * math.sin(angle * math.pi / 180), VELOCITY * math.cos(angle * math.pi / 180), 0)
	table.insert(bunnies, { id = id, position = position, velocity = velocity })
end

function init(self)
	math.randomseed(os.time())
	for i=1,500 do
		create_bunny(self, vmath.vector3(math.random(1, WIDTH), math.random(HEIGHT * 0.8 / 2, HEIGHT * 1.2 / 2), 0), vmath.vector3(0, 0, 0))
	end
	
	msg.post(".", "acquire_input_focus")
	
	self.frame_count = 0
	self.fps_start = socket.gettime()
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	for i=1,#bunnies do
		local bunny = bunnies[i]
		local v = bunny.velocity
		local p = bunny.position
		p.x = p.x + (v.x * dt)
		p.y = p.y + (v.y * dt)
		if p.x < 0 or p.x > WIDTH then
			v.x = -v.x
		end
		if p.y < 0 or p.y > HEIGHT then
			v.y = -v.y
		end
		set_position(p, bunny.id)
	end

	self.frame_count = self.frame_count + 1
	local fps = self.frame_count / (socket.gettime() - self.fps_start)
	msg.post("@render:", "draw_text", { text = ("Bunnies: %d FPS: %d"):format(#bunnies, fps), position = vmath.vector3(10, HEIGHT - 60, 0) } )

end

function on_input(self, action_id, action)
	if action_id == TOUCH and action.released then
		for i=1,1000 do
			create_bunny(self, vmath.vector3(math.random(action.x * 0.8, action.x * 1.2), action.y, 1))
		end
		self.frame_count = 0
		self.fps_start = socket.gettime()
	end
end
