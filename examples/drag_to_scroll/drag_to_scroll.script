go.property("fling_enabled", true)
go.property("fling_distance_threshold", 2000)	-- pixels per second

function init(self)
	msg.post("camera", "acquire_camera_focus")
	msg.post(".", "acquire_input_focus")
	self.fling = vmath.vector3()
end

function final(self)
	msg.post("camera", "release_camera_focus")
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if not self.drag and self.fling_enabled then
		go.set_position(go.get_position() + self.fling)
		self.fling = vmath.lerp(0.1, self.fling, vmath.vector3()) 
	end
end

function on_input(self, action_id, action)
	if action.pressed then
		self.drag = true
		self.pressed_pos = vmath.vector3(action.x, action.y, 0)
		self.pressed_time = socket.gettime()
		self.camera_pos = go.get_position()
	elseif action.released then
		self.drag = false
		
		if self.fling_enabled then
			local released_time = socket.gettime()
			local released_pos = vmath.vector3(action.x, action.y, 0)
			local delta_time = released_time - self.pressed_time
			local distance = vmath.length(released_pos - self.pressed_pos)
			local velocity = distance / delta_time
			if velocity >= self.fling_distance_threshold then
				local direction = vmath.normalize(self.pressed_pos - released_pos)
				self.fling = direction * velocity * 0.02
			end
		end
	end
	
	if self.drag then
		local mouse_pos = vmath.vector3(action.x, action.y, 0)
		go.set_position(self.camera_pos + self.pressed_pos - vmath.vector3(action.x, action.y, 0))
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
