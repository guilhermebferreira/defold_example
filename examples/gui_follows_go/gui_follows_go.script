function init(self)
	msg.post(".", "acquire_input_focus")
	self.things = {}
	math.randomseed(os.time())
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	msg.post("@render:", "draw_text", { text = "CLICK TO SPAWN GAME OBJECTS WITH PIE NODES", position = vmath.vector3(10, 40, 0) } )
	msg.post("@render:", "clear_color", { color = vmath.vector4(95 /256, 129 / 256, 161 / 256, 1 ) })

	local w = tonumber(sys.get_config("display.width"))
	local h = tonumber(sys.get_config("display.height"))
	for k,thing in pairs(self.things) do
		local pos = go.get_position(thing.id)
		pos.x = pos.x + thing.sx * dt
		pos.y = pos.y + thing.sy * dt
		if pos.x < 0 or pos.x > w then
			thing.sx = -thing.sx
			thing.hp = thing.hp - 1
			label.set_text(msg.url(nil, thing.id, "hp"), tostring(thing.hp))
		elseif pos.y < 0 or pos.y > h then
			thing.sy = -thing.sy
			thing.hp = thing.hp - 1
			label.set_text(msg.url(nil, thing.id, "hp"), tostring(thing.hp))
		end
		go.set_position(pos, thing.id)
		if thing.hp == 0 then
			self.things[k] = nil
			go.delete(thing.id)
			msg.post("#gui", "deletenode", { id = thing.id })
		else
			msg.post("#gui", "updatenode", { id = thing.id, position = pos, text = "HP: " .. thing.hp })
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		local pos = vmath.vector3(action.x, action.y, 0)
		local id = factory.create("#factory", pos)
		local thing = { id = id, sx = math.random(-200, 200), sy = math.random(-200, 200), hp = 3 }
		table.insert(self.things, thing)
		msg.post("#gui", "createnode", { id = id, position = pos })
		label.set_text(msg.url(nil, id, "hp"), tostring(thing.hp))
	end
end