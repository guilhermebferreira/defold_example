local lookup = require "examples.factory_and_properties.lookup"

local function modify_speed_of_things(things, delta)
	for _,id in pairs(things) do
		-- the url must reference the script instance where
		-- the property was defined
		local url = msg.url(nil, id, "script")
		local move_speed = go.get(url, "move_speed")
		go.set(url, "move_speed", move_speed + delta)
	end
end

local function random_position()
	return vmath.vector3(math.random(1, sys.get_config("display.width")),  math.random(1, sys.get_config("display.height")), 0)
end

function init(self)
	self.things = {}
	math.randomseed(os.time())
	for i=1,10 do
		local name = "Foo" .. i
		local key = hash(name)
		lookup.add(key, name)
		local id = factory.create("#factory", random_position(), nil, {
			move_to = random_position(),
			move_speed = math.random(100, 300),
			cool = math.random(1,2) == 1 and true or false,
			key = key,
			color = vmath.vector4(math.random(1, 100) / 100, math.random(1, 100) / 100, math.random(1, 100) / 100, 1),
			rotation = vmath.quat_rotation_z(math.random(1, 360) * 180 / math.pi),
			url = msg.url() })
		table.insert(self.things, id)
	end
	
	msg.post(".", "acquire_input_focus")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	msg.post("@render:", "draw_text", { text = "Up/Down to modify move_speed", position = vmath.vector3(20, 20, 0) } )
end

function on_message(self, message_id, message, sender)
	print(message_id, sender)
end

function on_input(self, action_id, action)
	if action_id == hash("up") and action.released then
		modify_speed_of_things(self.things, 100)
	elseif action_id == hash("down") and action.released then
		modify_speed_of_things(self.things, -100)
	end
end
